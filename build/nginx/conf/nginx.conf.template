load_module /etc/nginx/modules/ngx_http_image_filter_module.so;
user  nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    multi_accept on;
    use epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main escape=json  
    '{'
        '"Remote-Address":"$remote_addr",'
        '"Remote-User":"$remote_user",'
        '"Time":"$time_local",'
        '"HTTP-Request":"$request",'
        '"Status":"$status",'
        '"Content-Length":"$body_bytes_sent",'
        '"HTTP-referer":"$http_referer",'
        '"User-Agent":"$http_user_agent",'
        '"X-Forwarded-For":"$http_x_forwarded_for"'
    '}';
    access_log  /var/log/nginx/access.log  main;

    # -----------------------------------------
    # security
    # -----------------------------------------
    server_tokens off;
    autoindex off;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;

    # -----------------------------------------
    # performance
    # -----------------------------------------
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    # Specify at least 60 seconds of ALB timeout. 
    keepalive_timeout 65;
    reset_timedout_connection on;
    gzip on;
    gzip_http_version 1.0;
    gzip_disable "msie6";
    gzip_proxied any;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/json;
    open_file_cache max=100000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    server {
        listen 80;
        proxy_request_buffering off;
        resolver ${NAMESERVERS} valid=2s;

        location / {
            proxy_ignore_client_abort on;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # app comes from /etc/hosts, Docker added it for us!
            proxy_pass http://${DOMAIN_UPSTREAM}:${PORT};
        }

        location ~ /[0-9]+.html {
            root /etc/nginx/error;
            allow all;
        }

        location ~ /[0-9]+.json {
            root /etc/nginx/error;
            allow all;
        }

        # alb health check stub page.
        location ~ /nginx_status {
            stub_status on;
            access_log off;
        }

        # disable bot visit admin page
        # location = /robots.txt {
        #     return 200 "User-agent: *\nDisallow: /\n";
        # }
    }
}
